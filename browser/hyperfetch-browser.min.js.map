{"version":3,"file":"hyperfetch-browser.min.js","mappings":"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","sources":["webpack://hypf/webpack/universalModuleDefinition","webpack://hypf/webpack/bootstrap","webpack://hypf/webpack/runtime/define property getters","webpack://hypf/webpack/runtime/hasOwnProperty shorthand","webpack://hypf/webpack/runtime/make namespace object","webpack://hypf/./src/utils/constant.ts","webpack://hypf/./src/utils/get-abort-controller.ts","webpack://hypf/./src/utils/default-retries.ts","webpack://hypf/./src/utils/create-request.ts","webpack://hypf/./src/utils/append-params.ts","webpack://hypf/./src/utils/create-http-error.ts","webpack://hypf/./src/utils/create-http-method.ts","webpack://hypf/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hypf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hypf\"] = factory();\n\telse\n\t\troot[\"hypf\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Default maximum recommended timeout in milliseconds (adjust as needed)\nexport const DEFAULT_MAX_TIMEOUT = 2147483647\n\nexport const DEFAULT_BACKOFF_FACTOR = 0.3\nexport const DEFAULT_JITTER_FACTOR = 1\n\nexport const isAbortControllerSupported = typeof globalThis.AbortController === 'function'\nexport const isReadableStreamSupported = typeof globalThis.ReadableStream === 'function'\nexport const isWriteableStreamSupported = typeof globalThis.WritableStream === 'function'\nexport const isWebsocketSupported = typeof globalThis.WebSocket === 'function'\nexport const isWebRTCSupported = typeof globalThis.RTCPeerConnection === 'function'\nexport const isFormDataSupported = typeof globalThis.FormData === 'function'\nexport const isNode = typeof process !== 'undefined' && process.release.name === 'node'\n","import { isAbortControllerSupported } from './constant.js'\n\n// Expose the AbortController instance through the library interface\nexport const getAbortController = () =>\n  isAbortControllerSupported ? globalThis.abortController : null\n","export const defaultBackoff = (retryCount: number, factor: number) =>\n  Math.pow(2, retryCount) * 1000 * factor // Exponential backoff, starting from 1 second\n\nexport const defaultJitter = (factor: number) => Math.random() * 1000 * factor // Randomized delay up to 1 second\n","import type { InitOptions } from '../types/init.js'\nimport type { RequestFunction } from '../types/request.js'\n\nimport {\n  DEFAULT_BACKOFF_FACTOR,\n  DEFAULT_JITTER_FACTOR,\n  DEFAULT_MAX_TIMEOUT,\n  isAbortControllerSupported,\n  isNode,\n  isReadableStreamSupported,\n  isWebRTCSupported,\n  isWebsocketSupported,\n  isWriteableStreamSupported,\n} from './constant.js'\n\nimport { appendParams } from './append-params.js'\nimport { createHTTPError } from './create-http-error.js'\nimport { defaultBackoff, defaultJitter } from './default-retries.js'\n\nexport const createRequest: RequestFunction = async (\n  url = '',\n  options = {},\n  data,\n  { baseUrl, hooks, DEBUG }: InitOptions = Object.create(null)\n): Promise<[Error | null, null]> => {\n  const {\n    method = 'GET',\n    retries = 0,\n    backoff = defaultBackoff,\n    jitter = false,\n    jitterFactor = DEFAULT_JITTER_FACTOR,\n    backoffFactor = DEFAULT_BACKOFF_FACTOR,\n    timeout = DEFAULT_MAX_TIMEOUT,\n    retryOnTimeout = false,\n    params,\n    headers = {},\n    signal,\n    ...otherOptions\n  } = options\n\n  try {\n    // Execute pre-request hook\n    if (hooks?.preRequest) {\n      hooks.preRequest(url, options)\n    }\n\n    const fullUrl = `${baseUrl}${url}`\n\n    const reqHeaders = new Headers(headers)\n\n    // Automatically detect and add Content-Length based on payload length\n    const textEncoder = new TextEncoder()\n    if (!reqHeaders.get('Content-Length') && data) {\n      if (typeof data === 'string') {\n        reqHeaders.set('Content-Length', String(textEncoder.encode(data).length))\n      } else if (reqHeaders.get('Content-Length')?.includes('application/json')) {\n        reqHeaders.set('Content-Length', String(textEncoder.encode(JSON.stringify(data)).length))\n      }\n    }\n\n    // Set default Content-Type to application/json if not provided\n    if (!reqHeaders.get('Content-Type') && data && typeof data === 'object') {\n      if (!(((data as { body: FormData })?.body || data) instanceof FormData)) {\n        reqHeaders.set('Content-Type', 'application/json')\n      }\n    }\n\n    // Execute pre-timeout hook\n    if (hooks?.preTimeout) {\n      hooks.preTimeout(url, options)\n    }\n\n    if (isAbortControllerSupported) {\n      // Expose the AbortController instance\n      globalThis.abortController = new AbortController()\n\n      // Use the external AbortController instance\n      globalThis.abortSignal = signal ? signal : globalThis.abortController.signal\n    }\n\n    const timeoutId =\n      timeout && isAbortControllerSupported\n        ? setTimeout(() => {\n            globalThis.abortController.abort()\n\n            // Execute post-timeout hook\n            if (hooks?.postTimeout) {\n              hooks.postTimeout(url, options)\n            }\n          }, timeout)\n        : undefined\n\n    // Append params to the URL\n    const urlWithParams = params ? appendParams(fullUrl, params) : fullUrl\n\n    if (isReadableStreamSupported && !isWriteableStreamSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    if (!isReadableStreamSupported && isWriteableStreamSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    if (isReadableStreamSupported && isWriteableStreamSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    // WebRTC is supported, allowing for full duplex communication.\n    if (isWebRTCSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n    // WebSockets are supported, and thus full duplex communication is possible.\n    if (isWebsocketSupported && isNode) {\n      // @ts-expect-error - Duplex types is not supported\n      otherOptions.duplex = 'half'\n    }\n\n    const requestBody =\n      options.body instanceof FormData ? options.body : data ? JSON.stringify(data) : undefined\n\n    const requestOptions = {\n      method,\n      signal: isAbortControllerSupported ? globalThis.abortSignal : null,\n      headers: reqHeaders,\n      ...otherOptions,\n      body: requestBody,\n    }\n\n    if (requestBody instanceof FormData) {\n      requestOptions.headers.delete('Content-Type')\n    }\n\n    const responsePromise = fetch(urlWithParams, requestOptions)\n\n    clearTimeout(timeoutId)\n\n    const response = await responsePromise\n\n    const contentType = response.headers.get('content-type')\n\n    const responseData =\n      contentType && contentType.includes('application/json')\n        ? await response.json()\n        : await response.text()\n\n    if (!response.ok) {\n      throw createHTTPError(response, responseData)\n    }\n\n    // Execute post-request hook\n    if (hooks?.postRequest) {\n      hooks.postRequest(url, options, data, [null, responseData])\n    }\n\n    return [null, responseData]\n  } catch (error) {\n    // Execute post-request hook for errors\n    if (hooks?.postRequest) {\n      if (error instanceof Error) {\n        hooks.postRequest(url, options, data, [error, null])\n      }\n    }\n\n    if (error instanceof Error) {\n      if (error.name === 'AbortError') {\n        console.error('Request aborted:', error)\n      } else if (retryOnTimeout && error.name === 'TimeoutError' && retries && retries > 0) {\n        const delay =\n          jitter && jitterFactor\n            ? defaultJitter(jitterFactor)\n            : backoff(retries, backoffFactor ? backoffFactor : DEFAULT_BACKOFF_FACTOR)\n        if (DEBUG) {\n          console.warn(\n            `Request timed out. Retrying in ${delay}ms... (Remaining retries: ${retries})`\n          )\n        }\n        // Execute pre-retry hook\n        if (hooks?.preRetry) {\n          hooks.preRetry(url, options, retries, retries)\n        }\n        await new Promise((resolve) => setTimeout(resolve, delay))\n        const [retryErr, retryData] = await createRequest(\n          url,\n          { ...options, retries: retries - 1 },\n          data\n        )\n        // Execute post-retry hook\n        if (hooks?.postRetry) {\n          hooks.postRetry(url, options, data, [retryErr, retryData], retries, retries - 1)\n        }\n        return [retryErr, retryData]\n      } else if (options.retries && options.retries > 0) {\n        const delay =\n          options.jitter && options.jitterFactor\n            ? defaultJitter(options.jitterFactor)\n            : backoff(\n                options.retries,\n                options.backoffFactor ? options.backoffFactor : DEFAULT_BACKOFF_FACTOR\n              )\n        if (DEBUG) {\n          console.warn(\n            `Request failed. Retrying in ${delay}ms... (Remaining retries: ${options.retries})`\n          )\n        }\n        // Execute pre-retry hook\n        if (hooks?.preRetry) {\n          hooks.preRetry(url, options, options.retries, options.retries)\n        }\n        await new Promise((resolve) => setTimeout(resolve, delay))\n        const [retryErr, retryData] = await createRequest(\n          url,\n          { ...options, retries: options.retries - 1 },\n          data\n        )\n        // Execute post-retry hook\n        if (hooks?.postRetry) {\n          hooks.postRetry(\n            url,\n            options,\n            data,\n            [retryErr, retryData],\n            options.retries,\n            options.retries - 1\n          )\n        }\n        return [retryErr, retryData]\n      }\n    }\n\n    if (error instanceof Error) {\n      return [error, null]\n    }\n\n    return [null, null]\n  }\n}\n","export const appendParams = (url: string, params?: Record<string, string | number>): string => {\n  if (!params) {\n    return url\n  }\n\n  const urlWithParams = new URL(url)\n  Object.entries(params).forEach(([key, value]) =>\n    urlWithParams.searchParams.append(key, String(value))\n  )\n\n  return urlWithParams.toString()\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function createHTTPError(response: Response, responseData: Response) {\n  const code = response.status || response.status === 0 ? response.status : ''\n  const title = response.statusText || ''\n  const status = `${code} ${title}`.trim()\n  const reason = status ? `status code ${status}` : 'an unknown error'\n  const error = new Error(reason)\n\n  error.name = 'HTTPError'\n  ;(error as any).response = response\n  ;(error as any).data = responseData\n\n  return error\n}\n","import type { RequestMethod } from '../types/request.js'\nimport type { InitOptions } from '../types/init.js'\n\nimport { createRequest } from './create-request.js'\n\nexport const httpMethodFunction = (\n  url: string,\n  method: RequestMethod = 'GET',\n  options = {},\n  data: unknown,\n  initOptions: InitOptions\n) => {\n  return createRequest(url, { method, ...options }, data, initOptions)\n}\n","import type { Hooks } from './types/hooks.js'\nimport type { HttpRequestFunctions } from './types/request.js'\n\nimport { getAbortController } from './utils/get-abort-controller.js'\nimport { httpMethodFunction } from './utils/create-http-method.js'\n\nfunction init(baseUrl?: string, hooks?: Hooks, DEBUG: boolean = false): HttpRequestFunctions {\n  // Check if fetch is available\n  if (typeof fetch === 'undefined') {\n    throw new Error('This library is intended for use in the browser environment only.')\n  }\n\n  const initOptions = {\n    baseUrl,\n    hooks,\n    DEBUG,\n  }\n\n  return {\n    get: (url, options, data) => httpMethodFunction(url, 'GET', options, data, initOptions),\n    post: (url, options, data) => httpMethodFunction(url, 'POST', options, data, initOptions),\n    put: (url, options, data) => httpMethodFunction(url, 'PUT', options, data, initOptions),\n    delete: (url, options, data) => httpMethodFunction(url, 'DELETE', options, data, initOptions),\n    patch: (url, options, data) => httpMethodFunction(url, 'PATCH', options, data, initOptions),\n    options: (url, options, data) => httpMethodFunction(url, 'OPTIONS', options, data, initOptions),\n    getAbortController,\n  }\n}\n\nexport default { init }\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","DEFAULT_MAX_TIMEOUT","DEFAULT_BACKOFF_FACTOR","DEFAULT_JITTER_FACTOR","isAbortControllerSupported","globalThis","AbortController","isReadableStreamSupported","ReadableStream","isWriteableStreamSupported","WritableStream","isWebsocketSupported","WebSocket","isWebRTCSupported","RTCPeerConnection","isNode","FormData","process","release","name","getAbortController","abortController","defaultBackoff","retryCount","factor","Math","pow","defaultJitter","random","createRequest","url","options","data","baseUrl","hooks","DEBUG","create","method","retries","backoff","jitter","jitterFactor","backoffFactor","timeout","retryOnTimeout","params","headers","signal","otherOptions","preRequest","fullUrl","reqHeaders","Headers","textEncoder","TextEncoder","set","String","encode","length","includes","JSON","stringify","body","preTimeout","abortSignal","timeoutId","setTimeout","abort","postTimeout","undefined","urlWithParams","URL","entries","forEach","searchParams","append","toString","appendParams","duplex","requestBody","requestOptions","delete","responsePromise","fetch","clearTimeout","response","contentType","responseData","json","text","ok","status","statusText","trim","error","Error","createHTTPError","postRequest","console","delay","warn","preRetry","Promise","resolve","retryErr","retryData","postRetry","httpMethodFunction","initOptions","init","post","put","patch"],"sourceRoot":""}