{"version":3,"file":"hyperfetch-browser.min.js","mappings":"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","sources":["webpack://hypf/webpack/universalModuleDefinition","webpack://hypf/webpack/bootstrap","webpack://hypf/webpack/runtime/define property getters","webpack://hypf/webpack/runtime/hasOwnProperty shorthand","webpack://hypf/webpack/runtime/make namespace object","webpack://hypf/./src/utils/constant.ts","webpack://hypf/./src/utils/get-abort-controller.ts","webpack://hypf/./src/utils/default-retries.ts","webpack://hypf/./src/utils/create-request.ts","webpack://hypf/./src/utils/append-params.ts","webpack://hypf/./src/utils/create-http-error.ts","webpack://hypf/./src/utils/create-http-method.ts","webpack://hypf/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hypf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hypf\"] = factory();\n\telse\n\t\troot[\"hypf\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Default maximum recommended timeout in milliseconds (adjust as needed)\r\nexport const DEFAULT_MAX_TIMEOUT = 2147483647;\r\n\r\nexport const DEFAULT_BACKOFF_FACTOR = 0.3;\r\nexport const DEFAULT_JITTER_FACTOR = 1;\r\n\r\nexport const isAbortControllerSupported =\r\n  typeof globalThis.AbortController === \"function\";\r\nexport const isReadableStreamSupported =\r\n  typeof globalThis.ReadableStream === \"function\";\r\nexport const isWriteableStreamSupported =\r\n  typeof globalThis.WritableStream === \"function\";\r\nexport const isWebsocketSupported = typeof globalThis.WebSocket === \"function\";\r\nexport const isWebRTCSupported =\r\n  typeof globalThis.RTCPeerConnection === \"function\";\r\nexport const isFormDataSupported = typeof globalThis.FormData === \"function\";\r\nexport const isNode =\r\n  typeof process !== \"undefined\" && process.release.name === \"node\";\r\n","import { isAbortControllerSupported } from \"./constant.js\";\r\n\r\n// Expose the AbortController instance through the library interface\r\nexport const getAbortController = () =>\r\n  isAbortControllerSupported ? globalThis.abortController : null;\r\n","export const defaultBackoff = (retryCount: number, factor: number) =>\r\n  Math.pow(2, retryCount) * 1000 * factor; // Exponential backoff, starting from 1 second\r\n\r\nexport const defaultJitter = (factor: number) => Math.random() * 1000 * factor; // Randomized delay up to 1 second\r\n","import type { InitOptions } from \"../types/init.js\";\r\nimport type { RequestFunction } from \"../types/request.js\";\r\n\r\nimport {\r\n  DEFAULT_BACKOFF_FACTOR,\r\n  DEFAULT_JITTER_FACTOR,\r\n  DEFAULT_MAX_TIMEOUT,\r\n  isAbortControllerSupported,\r\n  isReadableStreamSupported,\r\n  isWriteableStreamSupported,\r\n  isWebRTCSupported,\r\n  isWebsocketSupported,\r\n  isNode,\r\n} from \"./constant.js\";\r\n\r\nimport { appendParams } from \"./append-params.js\";\r\nimport { createHTTPError } from \"./create-http-error.js\";\r\nimport { defaultBackoff, defaultJitter } from \"./default-retries.js\";\r\n\r\nexport const createRequest: RequestFunction = async (\r\n  url = \"\",\r\n  options = {},\r\n  data,\r\n  { baseUrl, hooks, DEBUG }: InitOptions = Object.create(null)\r\n): Promise<[Error | null, null]> => {\r\n  const {\r\n    method = \"GET\",\r\n    retries = 0,\r\n    backoff = defaultBackoff,\r\n    jitter = false,\r\n    jitterFactor = DEFAULT_JITTER_FACTOR,\r\n    backoffFactor = DEFAULT_BACKOFF_FACTOR,\r\n    timeout = DEFAULT_MAX_TIMEOUT,\r\n    retryOnTimeout = false,\r\n    params,\r\n    headers = {},\r\n    signal,\r\n    ...otherOptions\r\n  } = options;\r\n\r\n  try {\r\n    // Execute pre-request hook\r\n    if (hooks?.preRequest) {\r\n      hooks.preRequest(url, options);\r\n    }\r\n\r\n    const fullUrl = `${baseUrl}${url}`;\r\n\r\n    const reqHeaders = new Headers(headers);\r\n\r\n    // Automatically detect and add Content-Length based on payload length\r\n    const textEncoder = new TextEncoder();\r\n    if (!reqHeaders.get(\"Content-Length\") && data) {\r\n      if (typeof data === \"string\") {\r\n        reqHeaders.set(\r\n          \"Content-Length\",\r\n          String(textEncoder.encode(data).length)\r\n        );\r\n      } else if (\r\n        reqHeaders.get(\"Content-Length\")?.includes(\"application/json\")\r\n      ) {\r\n        reqHeaders.set(\r\n          \"Content-Length\",\r\n          String(textEncoder.encode(JSON.stringify(data)).length)\r\n        );\r\n      }\r\n    }\r\n\r\n    // Set default Content-Type to application/json if not provided\r\n    if (!reqHeaders.get(\"Content-Type\") && data && typeof data === \"object\") {\r\n      if (!(((data as { body: FormData })?.body || data) instanceof FormData)) {\r\n        reqHeaders.set(\"Content-Type\", \"application/json\");\r\n      }\r\n    }\r\n\r\n    // Execute pre-timeout hook\r\n    if (hooks?.preTimeout) {\r\n      hooks.preTimeout(url, options);\r\n    }\r\n\r\n    if (isAbortControllerSupported) {\r\n      // Expose the AbortController instance\r\n      globalThis.abortController = new AbortController();\r\n\r\n      // Use the external AbortController instance\r\n      globalThis.abortSignal = signal\r\n        ? signal\r\n        : globalThis.abortController.signal;\r\n    }\r\n\r\n    const timeoutId =\r\n      timeout && isAbortControllerSupported\r\n        ? setTimeout(() => {\r\n            globalThis.abortController.abort();\r\n\r\n            // Execute post-timeout hook\r\n            if (hooks?.postTimeout) {\r\n              hooks.postTimeout(url, options);\r\n            }\r\n          }, timeout)\r\n        : undefined;\r\n\r\n    // Append params to the URL\r\n    const urlWithParams = params ? appendParams(fullUrl, params) : fullUrl;\r\n\r\n    if (isReadableStreamSupported && !isWriteableStreamSupported && isNode) {\r\n      // @ts-expect-error\r\n      otherOptions.duplex = \"half\";\r\n    }\r\n    if (!isReadableStreamSupported && isWriteableStreamSupported && isNode) {\r\n      // @ts-expect-error\r\n      otherOptions.duplex = \"half\";\r\n    }\r\n    if (isReadableStreamSupported && isWriteableStreamSupported && isNode) {\r\n      // @ts-expect-error\r\n      otherOptions.duplex = \"half\";\r\n    }\r\n    // WebRTC is supported, allowing for full duplex communication.\r\n    if (isWebRTCSupported && isNode) {\r\n      // @ts-expect-error\r\n      otherOptions.duplex = \"half\";\r\n    }\r\n    // WebSockets are supported, and thus full duplex communication is possible.\r\n    if (isWebsocketSupported && isNode) {\r\n      // @ts-expect-error\r\n      otherOptions.duplex = \"half\";\r\n    }\r\n\r\n    const requestBody =\r\n      options.body instanceof FormData\r\n        ? options.body\r\n        : data\r\n        ? JSON.stringify(data)\r\n        : undefined;\r\n\r\n    const requestOptions = {\r\n      method,\r\n      signal: isAbortControllerSupported ? globalThis.abortSignal : null,\r\n      headers: reqHeaders,\r\n      ...otherOptions,\r\n      body: requestBody,\r\n    };\r\n\r\n    if (requestBody instanceof FormData) {\r\n      requestOptions.headers.delete(\"Content-Type\");\r\n    }\r\n\r\n    const responsePromise = fetch(urlWithParams, requestOptions);\r\n\r\n    clearTimeout(timeoutId);\r\n\r\n    const response = await responsePromise;\r\n\r\n    const contentType = response.headers.get(\"content-type\");\r\n\r\n    const responseData =\r\n      contentType && contentType.includes(\"application/json\")\r\n        ? await response.json()\r\n        : await response.text();\r\n\r\n    if (!response.ok) {\r\n      throw createHTTPError(response, responseData);\r\n    }\r\n\r\n    // Execute post-request hook\r\n    if (hooks?.postRequest) {\r\n      hooks.postRequest(url, options, data, [null, responseData]);\r\n    }\r\n\r\n    return [null, responseData];\r\n  } catch (error) {\r\n    // Execute post-request hook for errors\r\n    if (hooks?.postRequest) {\r\n      if (error instanceof Error) {\r\n        hooks.postRequest(url, options, data, [error, null]);\r\n      }\r\n    }\r\n\r\n    if (error instanceof Error) {\r\n      if (error.name === \"AbortError\") {\r\n        console.error(\"Request aborted:\", error);\r\n      } else if (\r\n        retryOnTimeout &&\r\n        error.name === \"TimeoutError\" &&\r\n        retries &&\r\n        retries > 0\r\n      ) {\r\n        const delay =\r\n          jitter && jitterFactor\r\n            ? defaultJitter(jitterFactor)\r\n            : defaultBackoff(\r\n                retries,\r\n                backoffFactor ? backoffFactor : DEFAULT_BACKOFF_FACTOR\r\n              );\r\n        if (DEBUG) {\r\n          console.warn(\r\n            `Request timed out. Retrying in ${delay}ms... (Remaining retries: ${retries})`\r\n          );\r\n        }\r\n        // Execute pre-retry hook\r\n        if (hooks?.preRetry) {\r\n          hooks.preRetry(url, options, retries, retries);\r\n        }\r\n        await new Promise((resolve) => setTimeout(resolve, delay));\r\n        const [retryErr, retryData] = await createRequest(\r\n          url,\r\n          { ...options, retries: retries - 1 },\r\n          data\r\n        );\r\n        // Execute post-retry hook\r\n        if (hooks?.postRetry) {\r\n          hooks.postRetry(\r\n            url,\r\n            options,\r\n            data,\r\n            [retryErr, retryData],\r\n            retries,\r\n            retries - 1\r\n          );\r\n        }\r\n        return [retryErr, retryData];\r\n      } else if (options.retries && options.retries > 0) {\r\n        const delay =\r\n          options.jitter && options.jitterFactor\r\n            ? defaultJitter(options.jitterFactor)\r\n            : defaultBackoff(\r\n                options.retries,\r\n                options.backoffFactor\r\n                  ? options.backoffFactor\r\n                  : DEFAULT_BACKOFF_FACTOR\r\n              );\r\n        if (DEBUG) {\r\n          console.warn(\r\n            `Request failed. Retrying in ${delay}ms... (Remaining retries: ${options.retries})`\r\n          );\r\n        }\r\n        // Execute pre-retry hook\r\n        if (hooks?.preRetry) {\r\n          hooks.preRetry(url, options, options.retries, options.retries);\r\n        }\r\n        await new Promise((resolve) => setTimeout(resolve, delay));\r\n        const [retryErr, retryData] = await createRequest(\r\n          url,\r\n          { ...options, retries: options.retries - 1 },\r\n          data\r\n        );\r\n        // Execute post-retry hook\r\n        if (hooks?.postRetry) {\r\n          hooks.postRetry(\r\n            url,\r\n            options,\r\n            data,\r\n            [retryErr, retryData],\r\n            options.retries,\r\n            options.retries - 1\r\n          );\r\n        }\r\n        return [retryErr, retryData];\r\n      }\r\n    }\r\n\r\n    if (error instanceof Error) {\r\n      return [error, null];\r\n    }\r\n\r\n    return [null, null];\r\n  }\r\n};\r\n","export const appendParams = (\r\n  url: string,\r\n  params?: Record<string, string | number>\r\n): string => {\r\n  if (!params) return url;\r\n\r\n  const urlWithParams = new URL(url);\r\n  Object.entries(params).forEach(([key, value]) =>\r\n    urlWithParams.searchParams.append(key, String(value))\r\n  );\r\n\r\n  return urlWithParams.toString();\r\n};\r\n","export function createHTTPError(response: Response, responseData: Response) {\r\n  const code = response.status || response.status === 0 ? response.status : \"\";\r\n  const title = response.statusText || \"\";\r\n  const status = `${code} ${title}`.trim();\r\n  const reason = status ? `status code ${status}` : \"an unknown error\";\r\n  const error = new Error(reason);\r\n\r\n  error.name = \"HTTPError\";\r\n\r\n  (error as any).response = response;\r\n  (error as any).data = responseData;\r\n\r\n  return error;\r\n}\r\n","import type { RequestMethod } from \"../types/request.js\";\r\nimport type { InitOptions } from \"../types/init.js\";\r\n\r\nimport { createRequest } from \"./create-request.js\";\r\n\r\nexport const httpMethodFunction = (\r\n  url: string,\r\n  method: RequestMethod = \"GET\",\r\n  options = {},\r\n  data: unknown,\r\n  initOptions: InitOptions\r\n) => {\r\n  return createRequest(url, { method, ...options }, data, initOptions);\r\n};\r\n","import { Hooks } from \"./types/hooks.js\";\r\nimport type { HttpRequestFunctions } from \"./types/request.js\";\r\n\r\nimport { getAbortController } from \"./utils/get-abort-controller.js\";\r\nimport { httpMethodFunction } from \"./utils/create-http-method.js\";\r\n\r\nfunction init(\r\n  baseUrl?: string,\r\n  hooks?: Hooks,\r\n  DEBUG: boolean = false\r\n): HttpRequestFunctions {\r\n  // Check if fetch is available\r\n  if (typeof fetch === \"undefined\") {\r\n    throw new Error(\r\n      \"This library is intended for use in the browser environment only.\"\r\n    );\r\n  }\r\n\r\n  const initOptions = {\r\n    baseUrl,\r\n    hooks,\r\n    DEBUG,\r\n  };\r\n\r\n  return {\r\n    get: (url, options, data) =>\r\n      httpMethodFunction(url, \"GET\", options, data, initOptions),\r\n    post: (url, options, data) =>\r\n      httpMethodFunction(url, \"POST\", options, data, initOptions),\r\n    put: (url, options, data) =>\r\n      httpMethodFunction(url, \"PUT\", options, data, initOptions),\r\n    delete: (url, options, data) =>\r\n      httpMethodFunction(url, \"DELETE\", options, data, initOptions),\r\n    patch: (url, options, data) =>\r\n      httpMethodFunction(url, \"PATCH\", options, data, initOptions),\r\n    options: (url, options, data) =>\r\n      httpMethodFunction(url, \"OPTIONS\", options, data, initOptions),\r\n    getAbortController,\r\n  };\r\n}\r\n\r\nexport default { init };\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","DEFAULT_MAX_TIMEOUT","DEFAULT_BACKOFF_FACTOR","DEFAULT_JITTER_FACTOR","isAbortControllerSupported","globalThis","AbortController","isReadableStreamSupported","ReadableStream","isWriteableStreamSupported","WritableStream","isWebsocketSupported","WebSocket","isWebRTCSupported","RTCPeerConnection","isNode","FormData","process","release","name","getAbortController","abortController","defaultBackoff","retryCount","factor","Math","pow","defaultJitter","random","createRequest","url","options","data","baseUrl","hooks","DEBUG","create","method","retries","backoff","jitter","jitterFactor","backoffFactor","timeout","retryOnTimeout","params","headers","signal","otherOptions","preRequest","fullUrl","reqHeaders","Headers","textEncoder","TextEncoder","set","String","encode","length","includes","JSON","stringify","body","preTimeout","abortSignal","timeoutId","setTimeout","abort","postTimeout","undefined","urlWithParams","URL","entries","forEach","searchParams","append","toString","appendParams","duplex","requestBody","requestOptions","delete","responsePromise","fetch","clearTimeout","response","contentType","responseData","json","text","ok","status","statusText","trim","error","Error","createHTTPError","postRequest","console","delay","warn","preRetry","Promise","resolve","retryErr","retryData","postRetry","httpMethodFunction","initOptions","init","post","put","patch"],"sourceRoot":""}